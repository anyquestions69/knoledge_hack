version: '1.0'

services:
  server:
    build:
      context: ./server
    working_dir: /app
    env_file:
      - .env.development.local
    restart: always
    ports:
      - '4000:4000'
      - '8000:8000'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - network
    command: npm run start
  client:  
    build:
      context: ./client
    ports:
      - 3000:3000
    depends_on:
      rabbitmq:
        condition: service_healthy 
    env_file:
      - .env
  machine:
    build: ./machine
    depends_on:
      rabbitmq:
        condition: service_healthy

    volumes:
      - ./machine:/machine
    networks:
      - network
    restart: always
    command: python3 /machine/main.py
  nginx:
    container_name: proxy_nginx
    depends_on:
      rabbitmq:
        condition: service_healthy
    image: nginx:latest
    ports:
      - '80:80'
    env_file:
      - .env
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./client:/var/www/static
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 30
    networks:
      - network

volumes:
  postgres:

networks:
  network: {}